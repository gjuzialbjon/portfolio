@use 'sass:math';
@use '../abstracts' as *;
@use '../vendors/bs' as *;

app-cards {
  @include flex-center(true);
}

.user-cards {
  min-height: 168px;
  max-width: 100vw;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
}

.playing-cards {
  margin: 0;
  padding: 2rem 0.5rem 0;
  list-style: none;

  @include flex-center(true, false);
}

.playing-card {
  position: relative;
  background-color: var(--playing_card_bg);
  display: flex;
  flex: 0 1 90px;
  min-width: 90px;
  max-height: 136.5px;
  aspect-ratio: math.div(3.3, 5) !important;
  border: var(--playing_card_border);
  border-radius: 7px;
  padding: 1.8rem;
  cursor: pointer;
  box-shadow: var(--playing_card_box_shadow);
  transition: background-color 0.2s ease-in-out;

  &:not(:first-child) {
    margin-left: -2.5rem;
  }

  &.selected {
    top: -1rem;
    background-color: var(--playing_card_selected_bg);
  }

  &.warn {
    background-color: var(--playing_card_warn_bg);
  }

  @include user-select-none;
}

.card-diamond,
.card-heart {
  color: #d40000;
}

.card-spade,
.card-club {
  color: #212121;
}

.card-top,
.card-bottom {
  position: absolute;
  @include flex-center(false);

  span:not(.card-nr) {
    font-weight: 800;
    font-size: 0.8rem;
    line-height: 1.2;
  }

  .card-nr {
    font-size: 1rem;
    font-weight: 700;
    line-height: 0.8;
    letter-spacing: 0;
  }

  .card-suit {
    margin-top: 0.2rem;
    width: 1rem;
    height: 1rem;
  }
}

.card-top {
  left: $distance;
  top: $distance * 2;
}

.card-bottom {
  right: $distance;
  bottom: $distance * 2;
}

.suits {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(5, 1fr);
  place-items: center;
}

.suit {
  position: relative;
  width: 100%;
}

.flip {
  transform: rotate(180deg);
}

// Grid for suits in the center
@for $i from 1 through 15 {
  .f-#{$i} {
    grid-row-start: math.ceil(math.div($i, 3));
    grid-row-end: math.ceil(math.div($i, 3)) + 1;

    @if $i % 3 == 0 {
      grid-column-start: 3;
      grid-column-end: 4;
    } @else {
      grid-column-start: $i % 3;
      grid-column-end: $i % 3 + 1;
    }
  }
}

.f-special {
  padding: 0.1rem;
  grid-row-start: 1;
  grid-row-end: 6;
  grid-column-start: 1;
  grid-column-end: 4;
}

.hint-to-rotate {
  display: none;
  font-size: 0.8rem;
}

@include media-breakpoint-up(lg) {
  .playing-card:hover {
    background-color: var(--playing_card_hover_bg);
  }
}

@include media-breakpoint-down(xl) {
  .playing-card {
    &:not(:first-child) {
      margin-left: -2.65rem;
    }
  }
}

@include media-breakpoint-down(lg) {
  .user-cards {
    min-height: 122px;
  }

  .playing-card {
    flex: 0 1 60px;
    max-height: 90px;
    min-width: 60px;
    height: 90px;
    padding: 1rem;

    &:not(:first-child) {
      margin-left: -1.7rem;
    }

    .card-top,
    .card-bottom {
      span:not(.card-nr) {
        font-weight: 600;
        font-size: 0.5rem;
      }

      .card-nr {
        font-size: 0.8rem;
        font-weight: 600;
      }

      .card-suit {
        width: 0.7rem;
        height: 0.7rem;
      }
    }

    .card-top {
      left: math.div($distance, 2);
      top: $distance;
    }

    .card-bottom {
      right: math.div($distance, 2);
      bottom: $distance;
    }
  }
}

@include media-breakpoint-down(md) {
  .playing-card {
    height: auto;

    &:not(:first-child) {
      margin-left: -1.9rem;
    }
  }
}

@media (max-width: 610px) {
  .hint-to-rotate {
    display: block;
  }
}

@media (max-width: 540px) {
  .hint-to-rotate {
    display: block;
  }

  .user-cards {
    min-height: 94px;
  }

  .suits {
    display: none;
  }

  .playing-card {
    flex: 0 1 45px;
    max-height: 65px;
    min-width: 45px;

    &:not(:first-child) {
      margin-left: -1.2rem;
    }

    .card-top,
    .card-bottom {
      span:not(.card-nr) {
        font-weight: 600;
        font-size: 0.5rem;
      }

      .card-nr {
        font-size: 0.8rem;
        font-weight: 600;
      }

      .card-suit {
        width: 0.7rem;
      }
    }
  }
}
